<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://linuxclash.github.io/news/article-28542.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>C++ String类的简单实现</title>
        <meta name="description" content="在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字" />
        <link rel="icon" href="/assets/website/img/linuxclash/favicon.ico" type="image/x-icon"/>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/bootstrap.min.css">
    <!-- animate CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/animate.css">
    <!-- owl carousel CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/owl.carousel.min.css">
    <!-- themify CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/themify-icons.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/flaticon.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/magnific-popup.css">
    <!-- swiper CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/slick.css">
    <!-- style CSS -->
    <link rel="stylesheet" href="/assets/website/css/linuxclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-5LVDH0E2G1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-5LVDH0E2G1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--::header part start::-->
    <header class="main_menu ">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8 col-xl-8">
                    <nav class="navbar navbar-expand-lg navbar-light">
                                                <a class="navbar-brand" href="/"><span>Linux Clash</span></a>
                        
                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse main-menu-item justify-content-end" id="navbarSupportedContent">
                            <ul class="navbar-nav">
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/">首页</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/free-nodes/">免费节点</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="/news/">新闻资讯</a>
                                </li>
                                                                <li class="nav-item">
                                    <a class="nav-link" href="#">关于</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#">联系</a>
                                </li>
                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- Header part end-->
    <!--::breadcrumb part start::-->
    <section class="breadcrumb breadcrumb_bg">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb_iner">
                        <div class="breadcrumb_iner_item">
                            <h2>C++ String类的简单实现</h2>
                            <p><a href="/">首页</a> <span>-</span> <a href="/news/">新闻资讯</a> <span>-</span> 正文</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--::breadcrumb part start::-->
    <!-- about part start-->
    <section class="about_part">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p><strong>在之前c语言的学习中，对于字符串我们很难像整型和其他变量那样进行比较和直接的复制或者定义去运用。但在C++中为了解决这个问题提供了一种类，String类，以类型的形式对字符串进行封装，它除了作为储存字符的容器外，可以对字序列的一系列操作。</strong></p> <p><strong>下面我们对String类进行简单的模拟实现：</strong></p> <pre><code>namespace wjx { 	class string 	{ 	public: 	private: 		char* _str; 	};</code></pre> <p>首先，我们定义一个自己的命名空间，来实现我们的string类，定义初始数据char*类型的_str来作为string类中的数据。</p> <pre><code>string(const char* str) 			:_str(new char[strlen(str) + 1]) 		{ 			strcpy(_str, str); 		}</code></pre> <p>我们先来实现String类中的构造函数，首先计算出所加字符串的长度，为原有数据_str开辟空间，此处+1是为了放置'\0'方便操作，开辟空间后将str通过strcpy函数复制给_str，完成构造。</p> <pre><code>string(const string&amp; s) 			:_str(new char[strlen(s._str)+1]) 		{ 			strcpy(_str, s._str); 		} ~string() 		{ 			delete[] _str; 			_str = nullptr; 		}</code></pre> <p>上述为实现string类的拷贝构造函数(深拷贝)和析构函数，一个类中如果没有定义拷贝构造函数，就会调用默认的拷贝构造函数。而拷贝构造分为深浅拷贝，下图为<span style="color:#fe2c24;">深浅拷贝</span>的底层实现：</p> <p>&nbsp;<img fetchpriority="high" decoding="async" alt="" height="409" src="http://img.555519.xyz/uploads/20230108/5861e568176d0a7e00e1e4fd86389e5b.jpg"></p> <p>&nbsp;在我们没有定义拷贝构造函数时，系统会调用默认的拷贝构造函数，string s1("hello world"),string s2(s1),如上图所示系统默认的拷贝构造函数为普通的传值拷贝，所以s1与s2指向同一块空间，但当出作用域时，调用析构函数，s1指向的空间被释放，s2则指向空，所以程序会崩溃。</p> <p style="text-align:center;"><img decoding="async" alt="" height="230" src="http://img.555519.xyz/uploads/20230108/25473469b8e98fcabed07ac3e7a994ba.jpg"></p> <p>&nbsp;但当我们使用深拷贝时，则不会出现那样的情况，因为我们在定义深拷贝函数时，会首先开辟一个与要拷贝字符串等长的空间，再将其复制过去，所以s1与s2指向的位置是不同的，析构函数释放时是互不影响的，所以这就是深浅拷贝的区别。</p> <p>下面为赋值运算符重载的方法：</p> <pre><code>string&amp; operator=(const string&amp; s) 		{ 			if (this != &amp;s) 			{ 				char* tmp = new char[strlen(s._str) + 1]; 				strcpy(tmp, s._str); 				delete[] _str; 				_str = tmp; 			} 			return *this; 		}</code></pre> <p>上述代码为赋值运算符重载，当我们调用赋值运算符重载时，需要先开辟一个空间用来复制需要拷贝的字符串，再通过释放原来的空间并用成员变量指向新的空间，从而达到赋值。注意的是if (this != &amp;s)是需要区别s1=s1时的情况的，不能自己给自己赋值。</p> <p><strong>下面为拷贝构造函数和赋值运算符函数的现代写法：</strong></p> <pre><code>string(const string&amp; s)//拷贝构造函数现代写法 			:_str(nullptr) 		{ 			string tmp(s._str); 			swap(_str, tmp._str); 		}  string&amp; operator=(const string&amp; s)//赋值运算符重载的现代写法 		{ 			 if (this != &amp;s) 			 { 				 string tmp(s); 				 swap(_str, tmp._str); 			 } 			 return *this; 		}</code></pre> <p>现代写法对于之前的传统写法来说，对于拷贝构造函数，传统方法需要申请新空间，但现代版本不需要，直接创造一个对象，因为对象被创建后，数据的底层空间已经被开辟出来了，直接可以通过交换来实现拷贝构造；而对于赋值运算符重载来说传统版本需要申请和释放空间，而新版本利用创建对象和交换函数来直接实现。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-28082.htm">人用针剂跟畜用针剂一样吗（兽用针和人用针的针同的吗?）</a></p>
                                        <p>下一个：<a href="/news/article-28543.htm">农大动物医院专家介绍（农大动物医院专家介绍表）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-8-23-free-node-subscribe-links.htm" title="「8月23日」最高速度20.9M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费机场订阅节点链接">「8月23日」最高速度20.9M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-15-free-node-subscribe-links.htm" title="「11月15日」最高速度23M/S，2024年Clash/SSR/Shadowrocket/V2ray免费机场订阅节点链接，翻墙机场推荐">「11月15日」最高速度23M/S，2024年Clash/SSR/Shadowrocket/V2ray免费机场订阅节点链接，翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-27-node-share-links.htm" title="「11月27日」最高速度20.8M/S，2024年SSR/Shadowrocket/V2ray/Clash免费机场订阅节点链接，翻墙机场推荐">「11月27日」最高速度20.8M/S，2024年SSR/Shadowrocket/V2ray/Clash免费机场订阅节点链接，翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-29471.htm" title="宠物美容师大概多少钱一个月（宠物美容师月薪多少）">宠物美容师大概多少钱一个月（宠物美容师月薪多少）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-4-free-subscribe-node.htm" title="「11月4日」最高速度22.4M/S，2024年V2ray/SSR/Shadowrocket/Clash免费机场订阅节点链接，翻墙机场推荐">「11月4日」最高速度22.4M/S，2024年V2ray/SSR/Shadowrocket/Clash免费机场订阅节点链接，翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-21-node-share.htm" title="「8月21日」最高速度20.3M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费机场订阅节点链接">「8月21日」最高速度20.3M/S，2024年SSR/Clash/V2ray/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-8-free-subscribe-node.htm" title="「10月8日」最高速度18.2M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅节点链接">「10月8日」最高速度18.2M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-1-node-share.htm" title="「11月1日」最高速度22.6M/S，2024年V2ray/SSR/Clash/Shadowrocket免费机场订阅节点链接，翻墙机场推荐">「11月1日」最高速度22.6M/S，2024年V2ray/SSR/Clash/Shadowrocket免费机场订阅节点链接，翻墙机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-15-free-high-speed-nodes.htm" title="「8月15日」最高速度22.8M/S，2024年V2ray/Shadowrocket/Clash/SSR每天更新免费机场订阅节点链接">「8月15日」最高速度22.8M/S，2024年V2ray/Shadowrocket/Clash/SSR每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-12-free-subscribe-node.htm" title="「8月12日」最高速度21.5M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅节点链接">「8月12日」最高速度21.5M/S，2024年Clash/Shadowrocket/SSR/V2ray每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">66</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!-- about part start-->
    <footer class="copyright_part">
        <div class="container">
            <div class="row align-items-center">
                <p class="footer-text m-0 col-lg-8 col-md-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    LinuxClash免费节点官网 版权所有 Powered by WordPress
                </p>
                <div class="col-lg-4 col-md-12 text-center text-lg-right footer-social">
                    <a href="#"><i class="ti-facebook"></i></a>
                    <a href="#"> <i class="ti-twitter"></i> </a>
                    <a href="#"><i class="ti-instagram"></i></a>
                    <a href="#"><i class="ti-skype"></i></a>
                </div>
            </div>
        </div>
    </footer>
    <!-- footer part end-->
    <!-- jquery plugins here-->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/linuxclash/jquery-1.12.1.min.js"></script>
    <!-- popper js -->
    <script src="/assets/website/js/frontend/linuxclash/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/linuxclash/bootstrap.min.js"></script>
    <!-- easing js -->
    <script src="/assets/website/js/frontend/linuxclash/jquery.magnific-popup.js"></script>
    <!-- swiper js -->
    <script src="/assets/website/js/frontend/linuxclash/swiper.min.js"></script>
    <!-- swiper js -->
    <script src="/assets/website/js/frontend/linuxclash/masonry.pkgd.js"></script>
    <!-- particles js -->
    <script src="/assets/website/js/frontend/linuxclash/owl.carousel.min.js"></script>
    <!-- swiper js -->
    <script src="/assets/website/js/frontend/linuxclash/slick.min.js"></script>
    <!-- custom js -->
    <script src="/assets/website/js/frontend/linuxclash/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>